---
- name: Create primary user as root
  hosts: all
  user: '{{ root_user | default("root") }}'

  vars_files:
    - defaults/main.yml
    - vars/config.yml

  roles:
    - { role: create_user, when: not vagrant, user: "{{admin_user}}", password: "{{ lookup('password', 'vars/user_pw encrypt=sha256_crypt length=12') }}" }


- name: Install everything as the admin user with sudo
  hosts: all
  user: '{{ admin_user }}'
  sudo: yes

  vars_files:
    - defaults/main.yml
    - vars/config.yml

  pre_tasks:
    - name: Make sure site_root exists
      file: path={{ site_root }} state=directory owner={{ admin_user }} group=www-data mode=0775
      when: not vagrant

    - name: install python-software-properties (required for apt-add-repository)
      apt: pkg=python-software-properties state=installed update_cache=yes

    - name: Add git-core ppa
      apt_repository: repo='ppa:git-core/ppa'

    - name: 'Install Git and build-essential (compilers, etc.)'
      apt: name={{ item }} state=installed
      with_items:
        - build-essential
        - git

  post_tasks:
    - name: Remove NOPASSWD from sudoers
      lineinfile: "dest=/etc/sudoers state=absent regexp='^{{ admin_user }} ALL=\\(ALL\\) NOPASSWD:ALL$' validate='visudo -cf %s'"

    - name: Generate report
      template: src=templates/report.j2 dest=../.ansible-config-report_{{ ansible_hostname }}
      sudo: no
      connection: local

  roles:
    - { role: clone, when: not vagrant }
    - { role: secure, when: not vagrant }
    - apache
    - node
    - database
    - php
    - { role: php-debug, when: dev }
    - { role: ftp, when: not vagrant }
    - { role: avahi, when: vagrant }
    - { role: vagrant, when: vagrant }
    - deploy

  tasks:
    #
    # Include site-specific tasks by including additional files here
    # - include: _local_tasks/example.yml
